{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import { readFileSync as readFile, writeFileSync as saveFile } from 'fs';\n\nconst orig: string = readFile('test.pyc', 'utf8')\nvar lines: Array<string> = orig.replaceAll('function', 'def').replaceAll('constructor(', '__init__(self,').replaceAll('this', 'self').split('\\n')\nvar converted: string = ''\n\n//console.log(orig)\n\nString.prototype.isUpperCase = function(): boolean {\n  if (!/^[a-zA-Z]+$/.test(this.toString())) return false;\n  return this.toString() === this.toUpperCase()\n}\nString.prototype.isLowerCase = function(): boolean {\n  if (!/^[a-zA-Z]+$/.test(this.toString())) return false;\n  return this.toString() === this.toLowerCase()\n}\nString.prototype.isModifiable = function(): boolean {\n  return /^[a-zA-Z]+$/.test(this.toString())\n}\n\nvar indentLevel: number = 0\n\nlines.forEach((l: string, i: number) => {\n  var stringSoFar: string = ''\n  var prev: string = ''\n  l.split('').forEach((c: string, i: number) => {\n    const prev = l.split('')[i - 1]\n    if (/^\\s+$/.test(c)) {\n      if (/^\\s+$/.test(c + prev)) return;\n    }\n    if (c == '}') {\n      indentLevel--\n      return;\n    }\n    if (c == '{' && i == l.length - 1) {\n      indentLevel++\n      stringSoFar += ':'\n      return;\n    }\n    if (i == 0) stringSoFar = indent(indentLevel) + stringSoFar\n    if (c.isUpperCase()) {\n      c = '_' + c.toLowerCase()\n    }\n    if (c !== ';') stringSoFar += c\n    if (stringSoFar == 'var ') stringSoFar = ''\n    //console.log(stringSoFar)\n  })\n  if (!/^\\s+$/.test(stringSoFar)) converted += stringSoFar + '\\n'\n})\n\nconsole.log(converted)\nsaveFile('test_converted.py', converted)\n\nfunction indent(lvl: number): string {\n  var toReturn: string = ''\n  for (let i: number = 0; i < lvl; i++) {\n    toReturn += ' '\n  }\n  return toReturn;\n}"],
  "mappings": ";AAAA,gBAAoE;AAEpE,MAAM,WAAe,UAAAA,cAAS,YAAY,MAAM;AAChD,IAAI,QAAuB,KAAK,WAAW,YAAY,KAAK,EAAE,WAAW,gBAAgB,gBAAgB,EAAE,WAAW,QAAQ,MAAM,EAAE,MAAM,IAAI;AAChJ,IAAI,YAAoB;AAIxB,OAAO,UAAU,cAAc,WAAoB;AACjD,MAAI,CAAC,cAAc,KAAK,KAAK,SAAS,CAAC;AAAG,WAAO;AACjD,SAAO,KAAK,SAAS,MAAM,KAAK,YAAY;AAC9C;AACA,OAAO,UAAU,cAAc,WAAoB;AACjD,MAAI,CAAC,cAAc,KAAK,KAAK,SAAS,CAAC;AAAG,WAAO;AACjD,SAAO,KAAK,SAAS,MAAM,KAAK,YAAY;AAC9C;AACA,OAAO,UAAU,eAAe,WAAoB;AAClD,SAAO,cAAc,KAAK,KAAK,SAAS,CAAC;AAC3C;AAEA,IAAI,cAAsB;AAE1B,MAAM,QAAQ,CAAC,GAAW,MAAc;AACtC,MAAI,cAAsB;AAC1B,MAAI,OAAe;AACnB,IAAE,MAAM,EAAE,EAAE,QAAQ,CAAC,GAAWC,OAAc;AAC5C,UAAMC,QAAO,EAAE,MAAM,EAAE,EAAED,KAAI;AAC7B,QAAI,QAAQ,KAAK,CAAC,GAAG;AACnB,UAAI,QAAQ,KAAK,IAAIC,KAAI;AAAG;AAAA,IAC9B;AACA,QAAI,KAAK,KAAK;AACZ;AACA;AAAA,IACF;AACA,QAAI,KAAK,OAAOD,MAAK,EAAE,SAAS,GAAG;AACjC;AACA,qBAAe;AACf;AAAA,IACF;AACA,QAAIA,MAAK;AAAG,oBAAc,OAAO,WAAW,IAAI;AAChD,QAAI,EAAE,YAAY,GAAG;AACnB,UAAI,MAAM,EAAE,YAAY;AAAA,IAC1B;AACA,QAAI,MAAM;AAAK,qBAAe;AAC9B,QAAI,eAAe;AAAQ,oBAAc;AAAA,EAE3C,CAAC;AACD,MAAI,CAAC,QAAQ,KAAK,WAAW;AAAG,iBAAa,cAAc;AAC7D,CAAC;AAED,QAAQ,IAAI,SAAS;AAAA,IACrB,UAAAE,eAAS,qBAAqB,SAAS;AAEvC,SAAS,OAAO,KAAqB;AACnC,MAAI,WAAmB;AACvB,WAAS,IAAY,GAAG,IAAI,KAAK,KAAK;AACpC,gBAAY;AAAA,EACd;AACA,SAAO;AACT;",
  "names": ["readFile", "i", "prev", "saveFile"]
}
